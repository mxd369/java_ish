Execute Command:
how to compile your program and how to execute it
$ pwd
$ 

Generate JavaDoc:
as well as providing the exact command for generating javadoc
$ pwd
$ 

Class documentations (the HTML files) generated by javadoc in a directory named doc.
Submit to user cs1302b on nike a directory called Project4
(using the following command: submit Project4 cs1302b).


Project 4 Notes:

Your program must be placed in package edu.uga.cs1302.list

Concepts:
  Generics,               slide medhdi-10-ADT & Collections (48,50,54)
  Serialization,          p. 593-594, 613
  Comparable interface,   slide medhdi-10-ADT & Collections (50,51)
  Doubly linked list.     slide medhdi-10-ADT & Collections (59)

comparator interface for sorting: 707-713
comparable interface, 431, 666, 675, 765
comparator<T> interface 707


constructors 77-78, 103, 176, 198-199, 1075


Implement four classes and a demo program:
  Person
  Student
  Node
  SortedDBlList
  Demo



serialize:
The process of converting an object into a linear series of bytes
so that it can be saved to a file or sent across a network.
See also persistence.


persistence:
The ability of an object to stay in existence after the executing program
that creates it terminates.
See also serialize.


doubly linked list:
A linked list with two references in each node: one that refers to the
next node in the list and one that refers to the previous node in
the list.


class:
(1) A Java reserved word used to define.
(2) The blueprint of an object-the model that defines the variables and
methods an object will contain when instantiated.


constants:
an identifier that contains a value that cannot be modified.
Used to make code more readable and to facilitate changes.
Defined in java using the final modifier.

constructors:
A special method in a class that is invoked when an object is
instantiated from the class. Used to initialize the object.


methods:
A name group of declarations and programming statements
that can be invoked (executed) when needed.
A method is part of a class.


list:
A collection of objects arranged in a linear manner.


generic:
A class designed so that it stores, operates on,
and manages objects whose type is not specified until the class is instantiated.


implement:
A Java reserved word that is used to specify the packages and classes
that are used in a particular Java source code file.


interface:
A Java reserved word that is used to define a set of abstract methods that
will be implemented by particular classes.


subclass:
A class derived from another class via inheritance.
Also called a derived class or child class.


Node:
Objects in a collection that generally manage the structure of the collection.
Nodes can be found in linked implementations of graphs, linked structures, and trees.


